domain: swe-lite
topic: python
train_or_test: TEST
repo: ''
task_name: pylint-dev__astroid-1196
revision: 39c2a9805970ca57093d32bbaf0e6a63e05041d8
dockerfile: ./Dockerfile
integrations_yaml: ../../extra/_integrations.yaml
variables_yaml: ./_variables.yaml
verification:
    run_python: ../../extra/verification.py
    run_python_params:
    - pylint-dev__astroid-1196
    - princeton-nlp/SWE-bench_Lite
    - dev
task:
-   role: user
    content: "\n            You are solving a Github issue in the repository .\n            You must make the changes to solve,\
        \ close, or address the issue, directly in the code.\n            getitem does not infer the actual unpacked value\n\
        When trying to call `Dict.getitem()` on a context where we have a dict unpacking of anything beside a real dict, astroid\
        \ currently raises an `AttributeError: 'getitem'`, which has 2 problems:\r\n\r\n- The object might be a reference\
        \ against something constant, this pattern is usually seen when we have different sets of dicts that extend each other,\
        \ and all of their values are inferrable. \r\n- We can have something that is uninferable, but in that case instead\
        \ of an `AttributeError` I think it makes sense to raise the usual `AstroidIndexError` which is supposed to be already\
        \ handled by the downstream.\r\n\r\n\r\nHere is a short reproducer;\r\n\r\n```py\r\nfrom astroid import parse\r\n\r\
        \n\r\nsource = \"\"\"\r\nX = {\r\n    'A': 'B'\r\n}\r\n\r\nY = {\r\n    **X\r\n}\r\n\r\nKEY = 'A'\r\n\"\"\"\r\n\r\n\
        tree = parse(source)\r\n\r\nfirst_dict = tree.body[0].value\r\nsecond_dict = tree.body[1].value\r\nkey = tree.body[2].value\r\
        \n\r\nprint(f'{first_dict.getitem(key).value = }')\r\nprint(f'{second_dict.getitem(key).value = }')\r\n\r\n\r\n```\r\
        \n\r\nThe current output;\r\n\r\n```\r\n $ python t1.py                                                          \
        \                                       3ms\r\nfirst_dict.getitem(key).value = 'B'\r\nTraceback (most recent call\
        \ last):\r\n  File \"/home/isidentical/projects/astroid/t1.py\", line 23, in <module>\r\n    print(f'{second_dict.getitem(key).value\
        \ = }')\r\n  File \"/home/isidentical/projects/astroid/astroid/nodes/node_classes.py\", line 2254, in getitem\r\n\
        \    return value.getitem(index, context)\r\nAttributeError: 'Name' object has no attribute 'getitem'\r\n```\r\n\r\
        \nExpeceted output;\r\n```\r\n $ python t1.py                                                                    \
        \                             4ms\r\nfirst_dict.getitem(key).value = 'B'\r\nsecond_dict.getitem(key).value = 'B'\r\
        \n\r\n```\r\n\n"
