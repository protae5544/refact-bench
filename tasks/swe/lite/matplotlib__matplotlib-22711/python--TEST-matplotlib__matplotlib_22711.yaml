domain: swe-lite
topic: python
train_or_test: TEST
repo: ''
task_name: matplotlib__matplotlib-22711
revision: f670fe78795b18eb1118707721852209cd77ad51
dockerfile: ./Dockerfile
integrations_yaml: ../../extra/_integrations.yaml
variables_yaml: ./_variables.yaml
verification:
    run_python: ../../extra/verification.py
    run_python_params:
    - matplotlib__matplotlib-22711
    - princeton-nlp/SWE-bench_Lite
    - test
task:
-   role: user
    content: "\n            You are solving a Github issue in the repository .\n            You must make the changes to solve,\
        \ close, or address the issue, directly in the code.\n            [Bug]: cannot give init value for RangeSlider widget\n\
        ### Bug summary\r\n\r\nI think `xy[4] = .25, val[0]` should be commented in /matplotlib/widgets. py\", line 915, in\
        \ set_val\r\nas it prevents to initialized value for RangeSlider\r\n\r\n### Code for reproduction\r\n\r\n```python\r\
        \nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom matplotlib.widgets import RangeSlider\r\n\r\n# generate\
        \ a fake image\r\nnp.random.seed(19680801)\r\nN = 128\r\nimg = np.random.randn(N, N)\r\n\r\nfig, axs = plt.subplots(1,\
        \ 2, figsize=(10, 5))\r\nfig.subplots_adjust(bottom=0.25)\r\n\r\nim = axs[0].imshow(img)\r\naxs[1].hist(img.flatten(),\
        \ bins='auto')\r\naxs[1].set_title('Histogram of pixel intensities')\r\n\r\n# Create the RangeSlider\r\nslider_ax\
        \ = fig.add_axes([0.20, 0.1, 0.60, 0.03])\r\nslider = RangeSlider(slider_ax, \"Threshold\", img.min(), img.max(),valinit=[0.0,0.0])\r\
        \n\r\n# Create the Vertical lines on the histogram\r\nlower_limit_line = axs[1].axvline(slider.val[0], color='k')\r\
        \nupper_limit_line = axs[1].axvline(slider.val[1], color='k')\r\n\r\n\r\ndef update(val):\r\n    # The val passed\
        \ to a callback by the RangeSlider will\r\n    # be a tuple of (min, max)\r\n\r\n    # Update the image's colormap\r\
        \n    im.norm.vmin = val[0]\r\n    im.norm.vmax = val[1]\r\n\r\n    # Update the position of the vertical lines\r\n\
        \    lower_limit_line.set_xdata([val[0], val[0]])\r\n    upper_limit_line.set_xdata([val[1], val[1]])\r\n\r\n    #\
        \ Redraw the figure to ensure it updates\r\n    fig.canvas.draw_idle()\r\n\r\n\r\nslider.on_changed(update)\r\nplt.show()\r\
        \n```\r\n\r\n\r\n### Actual outcome\r\n\r\n```python\r\n  File \"<ipython-input-52-b704c53e18d4>\", line 19, in <module>\r\
        \n    slider = RangeSlider(slider_ax, \"Threshold\", img.min(), img.max(),valinit=[0.0,0.0])\r\n\r\n  File \"/Users/Vincent/opt/anaconda3/envs/py38/lib/python3.8/site-packages/matplotlib/widgets.py\"\
        , line 778, in __init__\r\n    self.set_val(valinit)\r\n\r\n  File \"/Users/Vincent/opt/anaconda3/envs/py38/lib/python3.8/site-packages/matplotlib/widgets.py\"\
        , line 915, in set_val\r\n    xy[4] = val[0], .25\r\n\r\nIndexError: index 4 is out of bounds for axis 0 with size\
        \ 4\r\n```\r\n\r\n### Expected outcome\r\n\r\nrange slider with user initial values\r\n\r\n### Additional information\r\
        \n\r\nerror can be removed by commenting this line\r\n```python\r\n\r\n    def set_val(self, val):\r\n        \"\"\
        \"\r\n        Set slider value to *val*.\r\n\r\n        Parameters\r\n        ----------\r\n        val : tuple or\
        \ array-like of float\r\n        \"\"\"\r\n        val = np.sort(np.asanyarray(val))\r\n        if val.shape != (2,):\r\
        \n            raise ValueError(\r\n                f\"val must have shape (2,) but has shape {val.shape}\"\r\n   \
        \         )\r\n        val[0] = self._min_in_bounds(val[0])\r\n        val[1] = self._max_in_bounds(val[1])\r\n  \
        \      xy = self.poly.xy\r\n        if self.orientation == \"vertical\":\r\n            xy[0] = .25, val[0]\r\n  \
        \          xy[1] = .25, val[1]\r\n            xy[2] = .75, val[1]\r\n            xy[3] = .75, val[0]\r\n         \
        \   # xy[4] = .25, val[0]\r\n        else:\r\n            xy[0] = val[0], .25\r\n            xy[1] = val[0], .75\r\
        \n            xy[2] = val[1], .75\r\n            xy[3] = val[1], .25\r\n            # xy[4] = val[0], .25\r\n    \
        \    self.poly.xy = xy\r\n        self.valtext.set_text(self._format(val))\r\n        if self.drawon:\r\n        \
        \    self.ax.figure.canvas.draw_idle()\r\n        self.val = val\r\n        if self.eventson:\r\n            self._observers.process(\"\
        changed\", val)\r\n\r\n```\r\n\r\n### Operating system\r\n\r\nOSX\r\n\r\n### Matplotlib Version\r\n\r\n3.5.1\r\n\r\
        \n### Matplotlib Backend\r\n\r\n_No response_\r\n\r\n### Python version\r\n\r\n3.8\r\n\r\n### Jupyter version\r\n\r\
        \n_No response_\r\n\r\n### Installation\r\n\r\npip\n"
