domain: swe-lite
topic: python
train_or_test: TEST
repo: ''
task_name: pallets__flask-4992
revision: 4c288bc97ea371817199908d0d9b12de9dae327e
dockerfile: ./Dockerfile
integrations_yaml: ../../extra/_integrations.yaml
variables_yaml: ./_variables.yaml
verification:
    run_python: ../../extra/verification.py
    run_python_params:
    - pallets__flask-4992
    - princeton-nlp/SWE-bench_Lite
    - test
task:
-   role: user
    content: "\n            You are solving a Github issue in the repository .\n            You must make the changes to solve,\
        \ close, or address the issue, directly in the code.\n            Add a file mode parameter to flask.Config.from_file()\n\
        Python 3.11 introduced native TOML support with the `tomllib` package. This could work nicely with the `flask.Config.from_file()`\
        \ method as an easy way to load TOML config files:\r\n\r\n```python\r\napp.config.from_file(\"config.toml\", tomllib.load)\r\
        \n```\r\n\r\nHowever, `tomllib.load()` takes an object readable in binary mode, while `flask.Config.from_file()` opens\
        \ a file in text mode, resulting in this error:\r\n\r\n```\r\nTypeError: File must be opened in binary mode, e.g.\
        \ use `open('foo.toml', 'rb')`\r\n```\r\n\r\nWe can get around this with a more verbose expression, like loading from\
        \ a file opened with the built-in `open()` function and passing the `dict` to `app.Config.from_mapping()`:\r\n\r\n\
        ```python\r\n# We have to repeat the path joining that from_file() does\r\nwith open(os.path.join(app.config.root_path,\
        \ \"config.toml\"), \"rb\") as file:\r\n    app.config.from_mapping(tomllib.load(file))\r\n```\r\n\r\nBut adding a\
        \ file mode parameter to `flask.Config.from_file()` would enable the use of a simpler expression. E.g.:\r\n\r\n```python\r\
        \napp.config.from_file(\"config.toml\", tomllib.load, mode=\"b\")\r\n```\r\n\n"
