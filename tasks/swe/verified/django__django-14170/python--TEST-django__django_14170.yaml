domain: swe-verified
topic: python
train_or_test: TEST
repo: ''
task_name: django__django-14170
revision: 6efc35b4fe3009666e56a60af0675d7d532bf4ff
dockerfile: ./Dockerfile
integrations_yaml: ../../extra/_integrations.yaml
variables_yaml: ./_variables.yaml
verification:
    run_python: ../../extra/verification.py
    run_python_params:
    - django__django-14170
    - princeton-nlp/SWE-bench_Verified
    - test
task:
-   role: user
    content: "\n            You are solving a Github issue in the repository .\n            You must make the changes to solve,\
        \ close, or address the issue, directly in the code.\n            Query optimization in YearLookup breaks filtering\
        \ by \"__iso_year\"\nDescription\n\t \n\t\t(last modified by Florian Demmer)\n\t \nThe optimization to use BETWEEN\
        \ instead of the EXTRACT operation in ​YearLookup is also registered for the ​\"__iso_year\" lookup, which breaks\
        \ the functionality provided by ​ExtractIsoYear when used via the lookup.\nThis has unfortunately been broken ever\
        \ since ExtractIsoYear was introduced in ​Django 2.2 via #28649 and wasn't easy to track down since ExtractIsoYear\
        \ when used by itself eg. in an annotation works perfectly fine. Just when using the lookup in a filter, the optimization\
        \ is used (even when explicitly using an annotation):\n# annotation works\n>>> qs = DTModel.objects.annotate(extracted=ExtractIsoYear('start_date')).only('id')\n\
        >>> print(qs.query)\nSELECT \"db_functions_dtmodel\".\"id\", EXTRACT('isoyear' FROM \"db_functions_dtmodel\".\"start_date\"\
        ) AS \"extracted\" FROM \"db_functions_dtmodel\"\n# explicit annotation used in filter does not use \"extracted\"\
        \ and adds BETWEEN\n>>> print(qs.filter(extracted=2020).query)\nSELECT \"db_functions_dtmodel\".\"id\", EXTRACT('isoyear'\
        \ FROM \"db_functions_dtmodel\".\"start_date\") AS \"extracted\" FROM \"db_functions_dtmodel\" WHERE \"db_functions_dtmodel\"\
        .\"start_date\" BETWEEN 2020-01-01 AND 2020-12-31\n# implicit lookup uses BETWEEN\n>>> print(DTModel.objects.filter(start_date__iso_year=2020).only('id').query)\n\
        SELECT \"db_functions_dtmodel\".\"id\" FROM \"db_functions_dtmodel\" WHERE \"db_functions_dtmodel\".\"start_date\"\
        \ BETWEEN 2020-01-01 AND 2020-12-31\nThis results in the wrong data being returned by filters using iso_year.\nThis\
        \ PR fixes the behaviour, reverts the invalid changes to the tests and extends one test to catch this problem: ​https://github.com/django/django/pull/14157\n"
